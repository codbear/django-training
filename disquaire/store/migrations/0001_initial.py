# Generated by Django 3.2.9 on 2021-11-07 13:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=200)),
                ('picture', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('has_been_contacted', models.BooleanField(default=False)),
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store.albums')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.contacts')),
            ],
        ),
        migrations.AddField(
            model_name='albums',
            name='artists',
            field=models.ManyToManyField(blank=True, related_name='albums', to='store.Artists'),
        ),
    ]
